<?php
/**
 * Implements hook_commerce_checkout_pane_info()
 */
function my_checkout_commerce_checkout_pane_info() {
  $panes['my_checkout'] = array(
    'title' => t('Shipping method'),
    'page' => 'checkout',
    'weight' => -20,
    'base' => 'my_checkout_pane',
  );
  return $panes;
}
/**
 * Implements base_checkout_form()
 */
function my_checkout_pane_checkout_form($form, $form_state, $checkout_pane, $order) {
  $checkout_form['my_module_pane_field2'] = array(
    '#type' => 'radios',
    '#title' => t('Please select shipping method:'),
    '#description' => '',
    '#options' => array('standard_shipping' => 'Standard airmail/courier, 6-10 days','priority_shipping' =>'Priority shipping, 4-6 days'),
    '#default_value' => isset($order->field_shipping_method['und'])?$order->field_shipping_method['und'][0]['value']:'standard_shipping',
    '#required' => TRUE,
  );
  return $checkout_form;
}
/**
 * Implements hook_pane_checkout_form_validate().
 */
function my_checkout_pane_checkout_form_validate($form, &$form_state, $checkout_pane, $order) {
  if(empty($form_state['values']['my_checkout']['my_module_pane_field2'])){
    return FALSE;
  }
  return TRUE;
}

/**
 * Implements hook_pane_checkout_form_submit().
 */
 function my_checkout_pane_checkout_form_submit($form, &$form_state, $checkout_pane, $order) {
   $order->field_shipping_method[LANGUAGE_NONE][0]['value'] = $form_state['values']['my_checkout']['my_module_pane_field2'];
   commerce_order_save($order);
 }


 /**
 * Implements hook_commerce_shipping_method_info().
 */
function my_checkout_commerce_shipping_method_info() {
  $shipping_methods = array();

  $shipping_methods['alixxor_shipping_method'] = array(
    'title' => t('Shipping'),
    'description' => t(''),
  );

  return $shipping_methods;
}

/**
 * Implements hook_commerce_shipping_service_info().
 */
function my_checkout_commerce_shipping_service_info() {
  $shipping_services = array();

  $shipping_services['alixxor_shipping_service'] = array(
    'title' => t('Shipping'),
    'description' => t(''),
    'display_title' => t('Shipping'),
    'shipping_method' => 'alixxor_shipping_method',
    'price_component' => 'shipping',
    'callbacks' => array(
      'rate' => 'alixxor_service_rate',
      'details_form' => 'alixxor_service_details_form',
      'details_form_validate' => 'alixxor_service_details_form_validate',
      'details_form_submit' => 'alixxor_service_details_form_submit',
    ),
  );

  return $shipping_services;
}

/**
 * Shipping service callback: returns a base price array for a shipping service
 * calculated for the given order.
 */
function alixxor_service_rate($shipping_service, $order) {

  $standard_ship = array();
  $priority_ship = array();
  $profile_obj = commerce_customer_profile_load($order->commerce_customer_shipping['und'][0]['profile_id']);
  $ship_zones = array('shipping_AUS', 'shipping_EA_NA_UC_EUR_SP', 'shipping_RW', 'shipping_NZ');
  foreach($order->commerce_line_items['und'] as $line_item){
    $line_item_obj = commerce_line_item_load($line_item['line_item_id']);
    if($line_item_obj->type == 'product'){
      $product_obj = commerce_product_load($line_item_obj->commerce_product['und'][0]['product_id']);
      $delivery_country = $profile_obj->commerce_customer_address['und'][0]['country'];
      $ship_zone = db_query("SELECT ship_zone FROM {ship_countries} WHERE country_iso_code_2 = '$delivery_country'")->fetchField();
      
     if($shipping_service == 'alixxor_shipping_service'){
     $standard_values =  db_query("SELECT * FROM {ship_items} WHERE name = :name", array(':name' => $product_obj->title))->fetchObject();{
      if(in_array($ship_zone, $ship_zones)) {
        if(!is_null($standard_values->$ship_zone)){
        $ship_cost_item[] = @$standard_values->$ship_zone;
	}
      }
      }
      }else{
      $standard_values =  db_query("SELECT * FROM {priority_ship_items} WHERE name = :name", array(':name' => $product_obj->title))->fetchObject();
      if(in_array($ship_zone, $ship_zones)) {
        if(!is_null($standard_values->$ship_zone)){
        $ship_cost_item[] = @$standard_values->$ship_zone;
	}
      }
     }
    }
  }

  rsort($ship_cost_item);
  if(isset($ship_cost_item[1])){
    $ship_cost = $ship_cost_item[0] + (($ship_cost_item[1]*20)/100);
  }else{
    $ship_cost = $ship_cost_item[0];
  }

  $order_wrapper = entity_metadata_wrapper('commerce_order', $order);
  return array(
    'amount' => $ship_cost*100,
    'currency_code' => $order_wrapper->commerce_order_total->currency_code->value(),
    'data' => array(),
  );
}

/**
 * Shipping service callback: returns the example shipping service details form.
 */
function alixxor_service_details_form($pane_form, $pane_values, $checkout_pane, $order, $shipping_service) {
  $form = array();

  $pane_values['service_details'] += array(
    'name' => '',
    'express' => '',
  );
}

function _shipping_cost_priority($order) {
    $ship_cost = 0;

    $delivery_country = $order->delivery_country;
    $ship_zone = db_result(db_query("SELECT ship_zone FROM {ship_countries} WHERE country_id = '$delivery_country'"));
    $items = $order->products;

    foreach($items as $item) {
        $ship_cost_item = 0;
        $ship_zones = array('shipping_AUS', 'shipping_EA_NA_UC_EUR_SP', 'shipping_RW', 'shipping_NZ');
        if (in_array($ship_zone, $ship_zones)) {
            $ship_cost_item = db_result(db_query("SELECT {$ship_zone} FROM {priority_ship_items} WHERE name = '$item->title'"));
        }

        $ship_cost += $ship_cost_item * $item->qty;
    }

    return $ship_cost;
}


/**
 * Implements hook_commerce_price_component_type_info().
 */
function my_checkout_commerce_price_component_type_info() {
  return array(
    'alixxor_shipping_service_express' => array(
      'title' => t('Shipping'),
      'weight' => 20,
    ),
  );
}
